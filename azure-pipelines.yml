variables:
  - name: _BuildConfig
    value: Release
  - name: _TeamName
    value: AspNetCore
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: ENTITYFRAMEWORKCORE
  - name: _CosmosConnectionUrl
    value: https://ef-nightly-test.documents.azure.com:443/
  - name: _CosmosToken
    value: C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==

trigger:
  - master
  - release/*
  - feature/*

pr: ['*']

stages:
- stage: build
  displayName: Build
  jobs:
    - template: eng/common/templates/jobs/jobs.yml
      parameters:
        enableMicrobuild: true
        enablePublishBuildArtifacts: true
        enablePublishBuildAssets: true
        enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
        enablePublishTestResults: true
        enableTelemetry: true
        helixRepo: aspnet/EntityFrameworkCore
        jobs:
          - job: Windows
            pool:
              ${{ if eq(variables['System.TeamProject'], 'public') }}:
                name: NetCorePublic-Pool
                queue: BuildPool.Windows.10.Amd64.VS2017.Open
              ${{ if ne(variables['System.TeamProject'], 'public') }}:
                name: NetCoreInternal-Pool
                queue: BuildPool.Windows.10.Amd64.VS2017
            variables:
              - _InternalBuildArgs: ''
              - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
                - group: DotNet-Blob-Feed
                - _SignType: real
                - _PublishBlobFeedUrl: https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/index.json
                - _DotNetPublishToBlobFeed: true
                - _InternalBuildArgs: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName) /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1) /p:DotNetPublishBlobFeedUrl=$(_PublishBlobFeedUrl) /p:DotNetPublishToBlobFeed=$(_DotNetPublishToBlobFeed) /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines) /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory) /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
            steps:
              - task: NuGetCommand@2
                displayName: 'Clear NuGet caches'
                condition: succeeded()
                inputs:
                  command: custom
                  arguments: 'locals all -clear'
              - script: "echo ##vso[build.addbuildtag]daily-build"
                condition: and(ne(variables['Build.Reason'], 'PullRequest'), ne(variables['IsFinalBuild'], 'true'))
                displayName: 'Set CI tags'
              - script: "echo ##vso[build.addbuildtag]release-candidate"
                condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['IsFinalBuild'], 'true'))
                displayName: 'Set CI tags'
              - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine $(_InternalBuildArgs)
                env:
                  Test__Cosmos__DefaultConnection: $(_CosmosConnectionUrl)
                name: Build
              - task: PublishBuildArtifacts@1
                displayName: Upload TestResults
                condition: always()
                continueOnError: true
                inputs:
                  pathtoPublish: artifacts/TestResults/$(_BuildConfig)/
                  artifactName: $(Agent.Os)_$(Agent.JobName) TestResults
                  artifactType: Container
                  parallel: true
              - task: PublishBuildArtifacts@1
                displayName: Upload artifacts
                condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))
                inputs:
                  pathtoPublish: 'artifacts/packages/'
                  artifactName: packages
                  artifactType: Container
                  parallel: true

          - job: macOS
            pool:
              vmImage: macOS-10.13
            steps:
              # HACK: Use an older version to work around #16667
              - bash: brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/835ae521c065524abdf66578e68032fa24bce514/Formula/libspatialite.rb
                displayName: Install SpatiaLite
                continueOnError: true
              - script: eng/common/cibuild.sh --configuration $(_BuildConfig) --binaryLog --prepareMachine
                env:
                  Test__Cosmos__DefaultConnection: $(_CosmosConnectionUrl)
                name: Build
              - task: PublishBuildArtifacts@1
                displayName: Upload TestResults
                condition: always()
                continueOnError: true
                inputs:
                  pathtoPublish: artifacts/TestResults/$(_BuildConfig)/
                  artifactName: $(Agent.Os)_$(Agent.JobName) TestResults
                  artifactType: Container
                  parallel: true

          - job: Linux
            pool:
              vmImage: ubuntu-16.04
            variables:
              - ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['system.pullrequest.isfork'], false), notin(variables['Build.Reason'], 'IndividualCI', 'BatchedCI')) }}:
                - _CosmosToken: $(ef-nightly-cosmos-key)
            steps:
              - bash: sudo apt-get install -y libsqlite3-mod-spatialite
                displayName: Install SpatiaLite
                continueOnError: true
              - script: eng/common/cibuild.sh --configuration $(_BuildConfig) --prepareMachine
                env:
                  Test__Cosmos__DefaultConnection: $(_CosmosConnectionUrl)
                  Test__Cosmos__AuthToken: $(_CosmosToken)
                name: Build
              - task: PublishBuildArtifacts@1
                displayName: Upload TestResults
                condition: always()
                continueOnError: true
                inputs:
                  pathtoPublish: artifacts/TestResults/$(_BuildConfig)/
                  artifactName: $(Agent.Os)_$(Agent.JobName) TestResults
                  artifactType: Container
                  parallel: true

- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng\common\templates\post-build\post-build.yml
    parameters:
      # Symbol validation isn't being very reliable lately. This should be enabled back
      # once this issue is resolved: https://github.com/dotnet/arcade/issues/2871
      enableSymbolValidation: false 